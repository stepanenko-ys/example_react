===================================================================
REACT
-----

https://www.youtube.com/watch?v=xJZa2_aldDs&list=PLll7FOynxXuS-tS9J2kdMFDFJzVGu2UC8&index=42&t=1217s
https://vladilen.ru/react?utm_source=youtube&utm_medium=social&utm_campaign=wfmreact&utm_content=video

-------------------

В начале нужно у бедиться что уже устанволена Прогамма NodeJs и стоит утилита "npx"
> npx -v
  i: 6.14.8

-------------------

# Папка "public"	- Содержит ???
#--> "index.html"	- Главный файл который запускает все приложение. Самый главный в нем <div id="root"></div>
#--> "manifest.json"	- Для ПВАшки ???

# Папка "src"		- содержит весь наш код
#--> "index.js"		- Все приложение запускается именно с этого файла
#--> "App.js"		- Здесь первый код ???

Файл "package.json"	- инструкция для всего пакета и приложения

-------------------

> npm start		# Запуск приложения
> npm build		# Собрать приложение в Продакшен моде
> npm ls react		# Проверка количества и версий установленного реакта
> npm list		# Проверка всего установленного

-------------

class = className

-------------------

1. Во все компоненты обязательно имопртировать:
   import React from "react";

2. Обязательно что-то экспортируется наружу:
   export default function TodoList() {
     return (...)
   }

3. Обязательно компоненты называть с большой буквы и желательно так-же как называется файл


-------------------


===================================================================





===================================================================
Создание проекта:
---------------------

1.  npx create-react-app project_react_1

2.  rm src/App.css src/logo.svg src/App.test.js

3.  nano src/App.js

    i: import React from "react";
    i: 
    i: function App() {
    i:   return (
    i:     <div className='wrapper'>
    i:       <h1>React Tutorial</h1>
    i:     </div>
    i:   );
    i: }
    i: 
    i: export default App;

4.  npm start

5.  Insert to file "index.css":

    i: .wrapper {
    i:   padding-top: 5rem;
    i:   margin: 0 auto;
    i:   width: 600px;
    i: }



------------------------------------------------------
Создание компонента <ul>:
---------------------

1.  mkdir src/Todo
2.  nano src/Todo/TodoList.js

    i: import React from "react";
    i: 
    i: export default function TodoList() {
    i:     return (
    i:         <ul>
    i:             <li>1</li>
    i:             <li>2</li>
    i:         </ul>
    i:     )
    i: }

3.  В файл "App.js" вставить следующий код:

    i: import TodoList from "./Todo/TodoList";
    i: ....
    i: <div className='wrapper'>
    i:     <h1>React Tutorial</h1>
    i:     <TodoList />
    i: </div>
    
    
------------------------------------------------------
Создание компонента <li>:
---------------------

1.  nano src/Todo/TodoItem.js

    i: import React from "react";
    i: 
    i: export default function TodoItem() {
    i:     return (
    i:         <li>TODO</li>
    i:     )
    i: }

1.  nano src/Todo/TodoList.js

    i: <ul>
    i:     <TodoItem />
    i:     <TodoItem />
    i:     <TodoItem />
    i: </ul>


------------------------------------------------------
Добавление стилей:
---------------------

Стили в React описываются в CamelCase, все тире убираются.

1.  nano src/Todo/TodoList.js

    i: const styles = {
    i:     ul: {
    i:         listStyle: 'none',
    i:         margin: 0,
    i:         padding: 0
    i:     }
    i: }

    i: ...
    i: <ul style={styles.ul}>
    i:     <li>1</li>
    i:     <li>2</li>
    i: </ul>
    i: ...


------------------------------------------------------
Передача параметров в компонент:
---------------------

1.  nano src/App.js

    i: ...
    i: function App() {
    i:     const todos = [
    i:         {id: 1, completed: false, title: 'Купить Хлеб'},
    i:         {id: 2, completed: false, title: 'Купить Масло'},
    i:         {id: 3, completed: false, title: 'Купить Сыр'},
    i:     ]
    i:     return (
    i: ...
    i:         <TodoList todos={todos} />
    i: ...
    

------------------------------------------------------
Прием параметров в компонент (из предыдущего пункта) и создание Цикла:
---------------------

1.  nano src/Todo/TodoList.js

    i: ...
    i: export default function TodoList(props) {
    i:     return (
    i:         <ul style={styles.ul}>
    i:             {props.todos.map(todo => {
    i:                 return <TodoItem todo_data={todo} key={todo.id} />
    i:             }) }
    i:         </ul>
    i:     )
    i: }
    i: ...
    
2.  nano src/Todo/TodoItem.js
    
    i: ...
    i: export default function TodoItem({todo_data}) {
    i:     return (
    i:         <li>{todo_data.title}</li>
    i:     )
    i: }
    i: ...
 
    i: У любого масива есть метод ".map()" помогает преобразовать этот масив.
    i: todo => {...} На каждой итерации принимается объект "todo" и в колбек функции формируется HTML

    i: Можно получать так все "props"
    i: export default function TodoItem(props) {
    i:     {console.log('======', props);}
    i:     {console.log('======', props.todo_data);}

    i: Или можно получать так нужный ключ, если мы знаем название нужного нам входящего параметра  
    i: export default function TodoItem({todo_data}) {
    i:     {console.log('======', todo_data);}
    i:     {console.log('======', {todo_data});}


------------------------------------------------------
Вывод индекса для каждого из елементов "todo":
---------------------

1.  nano src/Todo/TodoList.js

    i: ...
    i: {props.todos.map((todo, todo_my_index) => {
    i:     return <TodoItem todo_data={todo} key={todo.id} todo_index={todo_my_index}  />
    i: }) }
    i: ...

2.  nano src/Todo/TodoItem.js

    i: ...
    i: export default function TodoItem({todo_data, todo_index}) {
    i:     return (
    i:         <li><strong>{todo_index + 1}</strong> - {todo_data.title}</li>
    i:     )
    i: }
    i: ...
    
===================================================================






===================================================================

---------------------------------------------------

===================================================================






===================================================================

---------------------------------------------------

===================================================================





===================================================================

---------------------------------------------------

===================================================================





===================================================================

---------------------------------------------------

===================================================================





===================================================================

---------------------------------------------------

===================================================================





===================================================================

---------------------------------------------------

=====================================================================


